

TO FIX:
- get rid of `include`?
  - no `new` means include
  - maybe eliminate `create`
  - just need good error messages if you forget `new`
  - Problem: Pretty hard to detect if you forget `new`.
    `Template.foo` used to be a pure function; now it
    modifies classes?
- how to let helpers access data in `this`?
- support primitive data arg?
- `#if` shouldn't set data, got confused there...
- eliminate makeRoot?

- MAYBE TEMPLATES ARE NOT COMPONENTS AFTER ALL
  - Templates have helpers with data in `this`
  - Template.foo(...) works but FooComponent(...) doesn't


TODO:
- event maps


- create/extend: ok to put primitives on proto in create?

====================






TextSearchComponent = Component.extend({
  SubView: FooView,
  myStuff: {},
  init: function () {
    this.x = new this.subView({});
  },
  helpers: {
    function () {

    }
  }
});

Template.foo.helpers({
  prettyName: 
});
Template.foo.events({
  prettyName: 
});




Template.foo.include({
  extend: FooComponent
});


.count()

new Foo(function () {})

{{#each foo}}


<template name="if">
{{#if this}}
  {{> content}}
{{else}}
  {{> elseContent}}
{{/if}}
</template>

built: function () {
  this.append(new TextBox);
  this.append(
}

